name: CI

on:
  push:
  repository_dispatch:
  workflow_dispatch:
  pull_request:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Format Check
        run: pnpm run format-check

      - name: ESLint Check
        run: pnpm run lint-check

      - name: TypeScript Check
        run: pnpm run type-check

      - name: Build Web
        run: pnpm run build

      - name: Upload to Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: dist/
          if-no-files-found: error

  deploy-cloudflare-pages:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Download Web Artifact
        uses: actions/download-artifact@v4
        with:
          path: dist
          name: web-dist

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dist --project-name=homepage

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        if: github.event_name == 'release'
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dist --project-name=homepage --branch=release

  upload-to-release-dist:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    if: github.event_name == 'release'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Web Artifact
        uses: actions/download-artifact@v4
        with:
          path: dist
          name: web-dist

      - name: Compress dist to dist.zip
        run: zip -r dist.zip dist

      - name: Upload Web dist to release
        uses: svenstaro/upload-release-action@v2
        with:
          file: dist.zip
          asset_name: dist.zip
